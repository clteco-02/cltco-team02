plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

// JDK 11을 강제로 사용하기 위한 toolchain 설정
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'mysql:mysql-connector-java:8.0.29'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.4'
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // TestContainers 추가
    testImplementation 'org.testcontainers:testcontainers:1.19.3'
    testImplementation 'org.testcontainers:mysql:1.19.3'
    testImplementation 'org.testcontainers:redis:1.19.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'

    implementation "org.testcontainers:mysql:1.19.3"
    implementation "org.testcontainers:testcontainers:1.19.3"
}

test {
    useJUnitPlatform()
}

bootRun {
    // JDK 버전 확인
    doFirst {
        if (!JavaVersion.current().isJava11Compatible()) {
            throw new GradleException("This application requires JDK 11 to run. Current version: ${JavaVersion.current()}")
        }
        println "Running with JDK: ${JavaVersion.current()}"
    }
} 